{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"TP2-ExequielSantucho-DATITOS-V0","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPQ5GYB6ArGDTGIOTVXVed3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"0Zz30Atq_qo4"},"source":["# Trabajo Práctico Nº2: Aprendizaje Profundo 2021 by Datitos"]},{"cell_type":"markdown","metadata":{"id":"aZD3PD_AQ0wI"},"source":["Elaborado por Exequiel Santucho"]},{"cell_type":"markdown","metadata":{"id":"ZTl-rkcNAUWy"},"source":["## 0) Importación de librerías"]},{"cell_type":"code","metadata":{"id":"uCh3Cqd5AdqZ","executionInfo":{"status":"ok","timestamp":1618783892437,"user_tz":180,"elapsed":984,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt \n","import torch\n","from torch import nn\n","#!pip install -U d2l\n","#from d2l import torch as d2l\n","from google.colab import files"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"BfQl89u1AhUm"},"source":["## 1) Preprocesamiento de Datos\n","### 1.1) Acceso y lectura del Dataset"]},{"cell_type":"markdown","metadata":{"id":"77_VaJUBIvNr"},"source":["Descargo de los archivos csv:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J41R5e-lGgE_","executionInfo":{"status":"ok","timestamp":1618783895090,"user_tz":180,"elapsed":3620,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}},"outputId":"c87f54ef-9264-486f-d1b8-b6aa0f3ba81f"},"source":["!gdown https://drive.google.com/uc?id=1asxGtRgNyelvRnwRAt7ONRSRvuy8t0zJ # Reemplazo \".../file/d/...\" por \".../uc?id=...\"\n","!gdown https://drive.google.com/uc?id=1n4jjZRCcUc5x9FDdu934FixU6x9_8Rrt # Reemplazo \".../file/d/...\" por \".../uc?id=...\""],"execution_count":10,"outputs":[{"output_type":"stream","text":["Downloading...\n","From: https://drive.google.com/uc?id=1asxGtRgNyelvRnwRAt7ONRSRvuy8t0zJ\n","To: /content/fifa2021_training.csv\n","3.28MB [00:00, 102MB/s]\n","Downloading...\n","From: https://drive.google.com/uc?id=1n4jjZRCcUc5x9FDdu934FixU6x9_8Rrt\n","To: /content/fifa2021_test.csv\n","100% 1.37M/1.37M [00:00<00:00, 85.5MB/s]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NbKXfVAwMSZx"},"source":["Importo los archivos y los almaceno en dos dataframes, separando en `train_data` y `test_data`:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":333},"id":"lEHumrxqI21-","executionInfo":{"status":"ok","timestamp":1618783896667,"user_tz":180,"elapsed":5188,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}},"outputId":"b2e4975e-312b-4737-8196-c147f0d854df"},"source":["train_data = pd.read_csv('https://drive.google.com/uc?id=1asxGtRgNyelvRnwRAt7ONRSRvuy8t0zJ') # Importación de datos desde url\n","test_data = pd.read_csv('https://drive.google.com/uc?id=1n4jjZRCcUc5x9FDdu934FixU6x9_8Rrt') # Importación de datos desde url\n","\n","print(train_data.shape)\n","print(test_data.shape)\n","#print(train_data.iloc[0:4, [0, 1, 2, 3, -3, -2, -1]])\n","\n","train_data.head(5) # Visualización de 5 primeras filas del dataframe"],"execution_count":11,"outputs":[{"output_type":"stream","text":["(13921, 53)\n","(5909, 52)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Name</th>\n","      <th>Natinality</th>\n","      <th>Overal</th>\n","      <th>Potential</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","      <th>PreferredFoot</th>\n","      <th>BirthDate</th>\n","      <th>Age</th>\n","      <th>PlayerWorkRate</th>\n","      <th>WeakFoot</th>\n","      <th>SkillMoves</th>\n","      <th>Value</th>\n","      <th>Wage</th>\n","      <th>Club</th>\n","      <th>Club_KitNumber</th>\n","      <th>Club_JoinedClub</th>\n","      <th>Club_ContractLength</th>\n","      <th>BallControl</th>\n","      <th>Dribbling</th>\n","      <th>Marking</th>\n","      <th>SlideTackle</th>\n","      <th>StandTackle</th>\n","      <th>Aggression</th>\n","      <th>Reactions</th>\n","      <th>Interceptions</th>\n","      <th>Vision</th>\n","      <th>Composure</th>\n","      <th>Crossing</th>\n","      <th>ShortPass</th>\n","      <th>LongPass</th>\n","      <th>Acceleration</th>\n","      <th>Stamina</th>\n","      <th>Strength</th>\n","      <th>Balance</th>\n","      <th>SprintSpeed</th>\n","      <th>Agility</th>\n","      <th>Jumping</th>\n","      <th>Heading</th>\n","      <th>ShotPower</th>\n","      <th>Finishing</th>\n","      <th>LongShots</th>\n","      <th>Curve</th>\n","      <th>FKAcc</th>\n","      <th>Penalties</th>\n","      <th>Volleys</th>\n","      <th>GKDiving</th>\n","      <th>GKHandling</th>\n","      <th>GKKicking</th>\n","      <th>GKReflexes</th>\n","      <th>Sex</th>\n","      <th>Position</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>243620</td>\n","      <td>Adam Hellborg</td>\n","      <td>Sweden</td>\n","      <td>64</td>\n","      <td>73</td>\n","      <td>188</td>\n","      <td>79</td>\n","      <td>R</td>\n","      <td>July 30, 1998</td>\n","      <td>22</td>\n","      <td>Medium/Medium</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1200000.0</td>\n","      <td>1500.0</td>\n","      <td>IK Sirius</td>\n","      <td>2.0</td>\n","      <td>Jan. 8, 2020</td>\n","      <td>2022</td>\n","      <td>62</td>\n","      <td>55</td>\n","      <td>60</td>\n","      <td>57</td>\n","      <td>60</td>\n","      <td>71</td>\n","      <td>58</td>\n","      <td>60</td>\n","      <td>61</td>\n","      <td>63</td>\n","      <td>44</td>\n","      <td>67</td>\n","      <td>64</td>\n","      <td>54</td>\n","      <td>66</td>\n","      <td>70</td>\n","      <td>54</td>\n","      <td>46</td>\n","      <td>58</td>\n","      <td>57</td>\n","      <td>53</td>\n","      <td>55</td>\n","      <td>39</td>\n","      <td>43</td>\n","      <td>39</td>\n","      <td>33</td>\n","      <td>43</td>\n","      <td>41</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>12</td>\n","      <td>Male</td>\n","      <td>MID</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>248565</td>\n","      <td>Cristian Cedrés</td>\n","      <td>Spain</td>\n","      <td>67</td>\n","      <td>70</td>\n","      <td>172</td>\n","      <td>64</td>\n","      <td>R</td>\n","      <td>Jan. 24, 1996</td>\n","      <td>25</td>\n","      <td>High/Medium</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1400000.0</td>\n","      <td>3300.0</td>\n","      <td>UD Las Palmas</td>\n","      <td>28.0</td>\n","      <td>July 17, 2018</td>\n","      <td>2021</td>\n","      <td>66</td>\n","      <td>68</td>\n","      <td>33</td>\n","      <td>34</td>\n","      <td>33</td>\n","      <td>37</td>\n","      <td>64</td>\n","      <td>20</td>\n","      <td>58</td>\n","      <td>67</td>\n","      <td>64</td>\n","      <td>62</td>\n","      <td>57</td>\n","      <td>84</td>\n","      <td>65</td>\n","      <td>57</td>\n","      <td>78</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>42</td>\n","      <td>49</td>\n","      <td>75</td>\n","      <td>60</td>\n","      <td>69</td>\n","      <td>64</td>\n","      <td>61</td>\n","      <td>65</td>\n","      <td>59</td>\n","      <td>12</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>15</td>\n","      <td>Male</td>\n","      <td>MID</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>203781</td>\n","      <td>Donny Toia</td>\n","      <td>United States</td>\n","      <td>68</td>\n","      <td>68</td>\n","      <td>173</td>\n","      <td>70</td>\n","      <td>L</td>\n","      <td>May 28, 1992</td>\n","      <td>28</td>\n","      <td>Medium/Medium</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1100000.0</td>\n","      <td>3400.0</td>\n","      <td>Real Salt Lake</td>\n","      <td>4.0</td>\n","      <td>Feb. 13, 2019</td>\n","      <td>2024</td>\n","      <td>62</td>\n","      <td>63</td>\n","      <td>62</td>\n","      <td>63</td>\n","      <td>64</td>\n","      <td>74</td>\n","      <td>64</td>\n","      <td>72</td>\n","      <td>54</td>\n","      <td>61</td>\n","      <td>62</td>\n","      <td>63</td>\n","      <td>56</td>\n","      <td>74</td>\n","      <td>75</td>\n","      <td>64</td>\n","      <td>72</td>\n","      <td>68</td>\n","      <td>66</td>\n","      <td>81</td>\n","      <td>62</td>\n","      <td>68</td>\n","      <td>39</td>\n","      <td>62</td>\n","      <td>58</td>\n","      <td>34</td>\n","      <td>49</td>\n","      <td>46</td>\n","      <td>15</td>\n","      <td>6</td>\n","      <td>15</td>\n","      <td>16</td>\n","      <td>Male</td>\n","      <td>DEF</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>259771</td>\n","      <td>Léo Andrade</td>\n","      <td>Brazil</td>\n","      <td>63</td>\n","      <td>70</td>\n","      <td>190</td>\n","      <td>76</td>\n","      <td>L</td>\n","      <td>April 18, 1998</td>\n","      <td>22</td>\n","      <td>Medium/High</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>900000.0</td>\n","      <td>1800.0</td>\n","      <td>Marítimo</td>\n","      <td>66.0</td>\n","      <td>July 31, 2020</td>\n","      <td>2022</td>\n","      <td>36</td>\n","      <td>31</td>\n","      <td>69</td>\n","      <td>68</td>\n","      <td>72</td>\n","      <td>55</td>\n","      <td>55</td>\n","      <td>57</td>\n","      <td>36</td>\n","      <td>48</td>\n","      <td>35</td>\n","      <td>49</td>\n","      <td>48</td>\n","      <td>62</td>\n","      <td>68</td>\n","      <td>70</td>\n","      <td>66</td>\n","      <td>61</td>\n","      <td>53</td>\n","      <td>71</td>\n","      <td>59</td>\n","      <td>43</td>\n","      <td>28</td>\n","      <td>29</td>\n","      <td>25</td>\n","      <td>29</td>\n","      <td>48</td>\n","      <td>39</td>\n","      <td>9</td>\n","      <td>12</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>Male</td>\n","      <td>DEF</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>226706</td>\n","      <td>Felipe Pires</td>\n","      <td>Brazil</td>\n","      <td>69</td>\n","      <td>72</td>\n","      <td>178</td>\n","      <td>68</td>\n","      <td>R</td>\n","      <td>April 18, 1995</td>\n","      <td>25</td>\n","      <td>High/Medium</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1800000.0</td>\n","      <td>6400.0</td>\n","      <td>Moreirense FC</td>\n","      <td>10.0</td>\n","      <td>Sept. 15, 2020</td>\n","      <td>2023</td>\n","      <td>69</td>\n","      <td>73</td>\n","      <td>47</td>\n","      <td>43</td>\n","      <td>36</td>\n","      <td>46</td>\n","      <td>59</td>\n","      <td>27</td>\n","      <td>64</td>\n","      <td>53</td>\n","      <td>65</td>\n","      <td>62</td>\n","      <td>65</td>\n","      <td>79</td>\n","      <td>74</td>\n","      <td>44</td>\n","      <td>73</td>\n","      <td>79</td>\n","      <td>78</td>\n","      <td>55</td>\n","      <td>45</td>\n","      <td>57</td>\n","      <td>62</td>\n","      <td>44</td>\n","      <td>56</td>\n","      <td>43</td>\n","      <td>56</td>\n","      <td>53</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>15</td>\n","      <td>Male</td>\n","      <td>MID</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       ID             Name     Natinality  ...  GKReflexes   Sex  Position\n","0  243620    Adam Hellborg         Sweden  ...          12  Male       MID\n","1  248565  Cristian Cedrés          Spain  ...          15  Male       MID\n","2  203781       Donny Toia  United States  ...          16  Male       DEF\n","3  259771      Léo Andrade         Brazil  ...           6  Male       DEF\n","4  226706     Felipe Pires         Brazil  ...          15  Male       MID\n","\n","[5 rows x 53 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"mmIYS5GjSJhk"},"source":["Concateno ambos dataframes, deshaciéndome de la primer feature (ID), ya que no aporta información para la predicción posterior. También chequeo la presencia de valores faltantes (NaN)."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zAw6HkT3STTB","executionInfo":{"status":"ok","timestamp":1618783896668,"user_tz":180,"elapsed":5180,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}},"outputId":"0256ff3c-729f-4e9b-faab-3bf00b0007af"},"source":["all_features = pd.concat((train_data.iloc[:, 1:-1], test_data.iloc[:, 1:])) # Se nota que del train_data se quita también la última feature que es el label\n","\n","all_features.isna() # Valores faltantes\n","all_features.isna().sum()  # Total de valores faltantes por columnas"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name                      0\n","Natinality                0\n","Overal                    0\n","Potential                 0\n","Height                    0\n","Weight                    0\n","PreferredFoot             0\n","BirthDate                 0\n","Age                       0\n","PlayerWorkRate            0\n","WeakFoot                  0\n","SkillMoves                0\n","Value                   623\n","Wage                    623\n","Club                    368\n","Club_KitNumber          368\n","Club_JoinedClub        1740\n","Club_ContractLength     368\n","BallControl               0\n","Dribbling                 0\n","Marking                   0\n","SlideTackle               0\n","StandTackle               0\n","Aggression                0\n","Reactions                 0\n","Interceptions             0\n","Vision                    0\n","Composure                 0\n","Crossing                  0\n","ShortPass                 0\n","LongPass                  0\n","Acceleration              0\n","Stamina                   0\n","Strength                  0\n","Balance                   0\n","SprintSpeed               0\n","Agility                   0\n","Jumping                   0\n","Heading                   0\n","ShotPower                 0\n","Finishing                 0\n","LongShots                 0\n","Curve                     0\n","FKAcc                     0\n","Penalties                 0\n","Volleys                   0\n","GKDiving                  0\n","GKHandling                0\n","GKKicking                 0\n","GKReflexes                0\n","Sex                       0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"T5xvk-SkTszE"},"source":["### 1.2) Preprecesamiento de los datos"]},{"cell_type":"markdown","metadata":{"id":"3HthzMydVcXR"},"source":["Teniendo una amplia vairiedad de tipos de datos y valores se reemplazan en primer lugar las features numéricas con valores medios, escalados con media nula y desviación estándar unitaria"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HcPZHP09Fp8q","executionInfo":{"status":"ok","timestamp":1618783896669,"user_tz":180,"elapsed":5173,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}},"outputId":"45db5395-dccc-401b-b282-97807c36c587"},"source":["numeric_features = all_features.dtypes[all_features.dtypes != 'object'].index # Si los datos del test_data fueran inaccesibles, se debe calcular la media y la desviación del train_data\n","all_features[numeric_features] = all_features[numeric_features].apply(lambda x: (x - x.mean()) / (x.std()))\n","\n","all_features[numeric_features] = all_features[numeric_features].fillna(0) # Luego de normalizar los datos, asigno valor nulo a los valores faltantes\n","all_features.isna().sum()  # Total de valores faltantes por columnas"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name                      0\n","Natinality                0\n","Overal                    0\n","Potential                 0\n","Height                    0\n","Weight                    0\n","PreferredFoot             0\n","BirthDate                 0\n","Age                       0\n","PlayerWorkRate            0\n","WeakFoot                  0\n","SkillMoves                0\n","Value                     0\n","Wage                      0\n","Club                    368\n","Club_KitNumber            0\n","Club_JoinedClub        1740\n","Club_ContractLength     368\n","BallControl               0\n","Dribbling                 0\n","Marking                   0\n","SlideTackle               0\n","StandTackle               0\n","Aggression                0\n","Reactions                 0\n","Interceptions             0\n","Vision                    0\n","Composure                 0\n","Crossing                  0\n","ShortPass                 0\n","LongPass                  0\n","Acceleration              0\n","Stamina                   0\n","Strength                  0\n","Balance                   0\n","SprintSpeed               0\n","Agility                   0\n","Jumping                   0\n","Heading                   0\n","ShotPower                 0\n","Finishing                 0\n","LongShots                 0\n","Curve                     0\n","FKAcc                     0\n","Penalties                 0\n","Volleys                   0\n","GKDiving                  0\n","GKHandling                0\n","GKKicking                 0\n","GKReflexes                0\n","Sex                       0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"RspUybheeus0"},"source":["A continuación se trabaja con los valores discretos, ampliando el dataset aplicando `one-hot-encoding`"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WQQ0oVnGe-XI","executionInfo":{"status":"ok","timestamp":1618783896669,"user_tz":180,"elapsed":5165,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}},"outputId":"1a2e0466-ad00-4fd5-c22f-39edae98116a"},"source":["#all_features = pd.get_dummies(all_features, dummy_na=True)\n","#in_features.shape # Se nota que la cantidad de features se amplía de 52 a 28673\n","\n","in_features = all_features.iloc[:, 18:50]\n","in_features.shape # Se nota que la cantidad de features se amplía de 52 a 28673\n","in_features.head()\n","\n","train_labels = pd.get_dummies(train_data.Position)\n","print(train_labels)"],"execution_count":14,"outputs":[{"output_type":"stream","text":["       DEF  FWD  GK  MID\n","0        0    0   0    1\n","1        0    0   0    1\n","2        1    0   0    0\n","3        1    0   0    0\n","4        0    0   0    1\n","...    ...  ...  ..  ...\n","13916    0    0   0    1\n","13917    0    0   0    1\n","13918    0    0   0    1\n","13919    1    0   0    0\n","13920    0    1   0    0\n","\n","[13921 rows x 4 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"CbY2Ax-4gXDX"},"source":["Finalmente, se convierte del formato NumPy de pandas a tensor para iniciar el entrenamiento"]},{"cell_type":"code","metadata":{"id":"lIVu7JB-glvX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618783896670,"user_tz":180,"elapsed":5159,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}},"outputId":"0caeb769-b760-4820-9714-7ca319c0b6e6"},"source":["n_train = train_data.shape[0]\n","train_features = torch.tensor(in_features[:n_train].values, dtype=torch.float32)\n","test_features = torch.tensor(in_features[n_train:].values, dtype=torch.float32)\n","labels = torch.tensor(train_labels.values, dtype=torch.float32)\n","train_labels = torch.argmax(labels, dim=1) # Convierto one hot encoding a vector de una dimensión para poder usar correctamente la función de pérdida\n","print(train_labels)"],"execution_count":15,"outputs":[{"output_type":"stream","text":["tensor([3, 3, 0,  ..., 3, 0, 1])\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4_eXI1vdgI1H"},"source":["## 2) Entrenamiento\n"]},{"cell_type":"code","metadata":{"id":"2zJVJDSzjG9m","colab":{"base_uri":"https://localhost:8080/","height":890},"executionInfo":{"status":"ok","timestamp":1618783897854,"user_tz":180,"elapsed":6335,"user":{"displayName":"Exequiel Santucho","photoUrl":"","userId":"10709628178102361168"}},"outputId":"f9e2bf4d-73e9-457d-eeeb-43ec750c2b55"},"source":["# Lectura del dataset\n","import random\n","\n","def load_array(batch_size, features, labels):\n","    num_examples = len(features)\n","    indices = list(range(num_examples))\n","    # The examples are read at random, in no particular order\n","    random.shuffle(indices)\n","    for i in range(0, num_examples, batch_size):\n","        batch_indices = torch.tensor(indices[i:min(i +\n","                                                   batch_size, num_examples)])\n","        yield features[batch_indices], labels[batch_indices]\n","\n","\n","batch_size = 256\n","data_iter = load_array(batch_size, train_features,  train_labels)\n","\n","# for X, y in load_array(batch_size, train_features, train_labels):\n","#     print(X, '\\n', y)\n","#     break\n","\n","\n","# Definición del modelo\n","\n","net = nn.Sequential(nn.Flatten(), nn.Linear(32, 256), nn.ReLU(), nn.Linear(256, 4))\n","#net = nn.Sequential(nn.Flatten(), nn.Linear(32, 4))\n","\n","# Inicializo parámetros\n","# net[0].weight.data.normal_(0, 0.01)\n","# net[0].bias.data.fill_(0)\n","\n","# Definición de función de pérdida\n","loss = nn.CrossEntropyLoss()\n","\n","# Algoritmo de optimización\n","trainer = torch.optim.SGD(net.parameters(), lr=0.5)\n","\n","# Entrenamiento\n","num_epochs = 50\n","for epoch in range(num_epochs):\n","    for X, y in data_iter:\n","        l = loss(net(X), y)\n","        trainer.zero_grad()\n","        l.backward()\n","        trainer.step()\n","    l = loss(net(train_features), train_labels)\n","    print(f'epoch {epoch + 1}, loss {l:f}')\n","\n","\n","# PREDICCIÓN DEL MODELO\n","predicted = net(test_features)\n","predicted_index = torch.argmax(predicted, dim=1)\n","pos = ['DEF', 'FWD', 'GK', 'MID']\n","\n","resultado = [pos[i] for i in predicted_index]\n","ID_test = test_data.iloc[:, 0].tolist()\n","\n","print(type(resultado))\n","print(type(ID_test))\n","dicc = {'Id':ID_test, 'Category': resultado}\n","SALIDA = pd.DataFrame(dicc)\n","SALIDA.tail(50)\n","\n","SALIDA.to_csv('SALIDA_TP2_V0.csv', index=False)\n","files.download('SALIDA_TP2_V0.csv')"],"execution_count":16,"outputs":[{"output_type":"stream","text":["epoch 1, loss 0.279902\n","epoch 2, loss 0.279902\n","epoch 3, loss 0.279902\n","epoch 4, loss 0.279902\n","epoch 5, loss 0.279902\n","epoch 6, loss 0.279902\n","epoch 7, loss 0.279902\n","epoch 8, loss 0.279902\n","epoch 9, loss 0.279902\n","epoch 10, loss 0.279902\n","epoch 11, loss 0.279902\n","epoch 12, loss 0.279902\n","epoch 13, loss 0.279902\n","epoch 14, loss 0.279902\n","epoch 15, loss 0.279902\n","epoch 16, loss 0.279902\n","epoch 17, loss 0.279902\n","epoch 18, loss 0.279902\n","epoch 19, loss 0.279902\n","epoch 20, loss 0.279902\n","epoch 21, loss 0.279902\n","epoch 22, loss 0.279902\n","epoch 23, loss 0.279902\n","epoch 24, loss 0.279902\n","epoch 25, loss 0.279902\n","epoch 26, loss 0.279902\n","epoch 27, loss 0.279902\n","epoch 28, loss 0.279902\n","epoch 29, loss 0.279902\n","epoch 30, loss 0.279902\n","epoch 31, loss 0.279902\n","epoch 32, loss 0.279902\n","epoch 33, loss 0.279902\n","epoch 34, loss 0.279902\n","epoch 35, loss 0.279902\n","epoch 36, loss 0.279902\n","epoch 37, loss 0.279902\n","epoch 38, loss 0.279902\n","epoch 39, loss 0.279902\n","epoch 40, loss 0.279902\n","epoch 41, loss 0.279902\n","epoch 42, loss 0.279902\n","epoch 43, loss 0.279902\n","epoch 44, loss 0.279902\n","epoch 45, loss 0.279902\n","epoch 46, loss 0.279902\n","epoch 47, loss 0.279902\n","epoch 48, loss 0.279902\n","epoch 49, loss 0.279902\n","epoch 50, loss 0.279902\n","<class 'list'>\n","<class 'list'>\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_6483d961-a5aa-478c-9355-b6b975bd75e8\", \"SALIDA_TP2_V0.csv\", 64354)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}}]}]}